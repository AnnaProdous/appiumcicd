<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="4" hostname="MacBook-Pro-Ann.local" failures="0" tests="5" name="Pixel_5" time="14.285" errors="0" timestamp="2023-08-16T14:29:43 IDT">
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.08">
    <failure type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. Original error: &amp;apos;ffmpeg&amp;apos; binary is not found in PATH. Install it using &amp;apos;brew install ffmpeg&amp;apos;. Check https://www.ffmpeg.org/download.html for more details.
Build info: version: &amp;apos;4.11.0&amp;apos;, revision: &amp;apos;040bc5406b&amp;apos;
System info: os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.16&amp;apos;, java.version: &amp;apos;15.0.2&amp;apos;
Driver info: io.appium.java_client.ios.IOSDriver
Command: [12fa12ad-ff2d-407e-b426-1bc8ad2b872f, startRecordingScreen {}]
Capabilities {appium:app: /Users/annprodous/TDDFramew..., appium:automationName: XCUITest, appium:bundleId: com.saucelabs.SwagLabsMobil..., appium:databaseEnabled: false, appium:deviceName: iPhone 14 Pro Max, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: false, appium:takesScreenshot: true, appium:udid: 90BAEFB6-D016-4D55-B9F4-83E..., appium:wdaLocalPort: 10001, appium:webStorageEnabled: false, appium:webkitDebugProxyPort: 11001, platformName: IOS}
Session ID: 12fa12ad-ff2d-407e-b426-1bc8ad2b872f">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: 'ffmpeg' binary is not found in PATH. Install it using 'brew install ffmpeg'. Check https://www.ffmpeg.org/download.html for more details.
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '15.0.2'
Driver info: io.appium.java_client.ios.IOSDriver
Command: [12fa12ad-ff2d-407e-b426-1bc8ad2b872f, startRecordingScreen {}]
Capabilities {appium:app: /Users/annprodous/TDDFramew..., appium:automationName: XCUITest, appium:bundleId: com.saucelabs.SwagLabsMobil..., appium:databaseEnabled: false, appium:deviceName: iPhone 14 Pro Max, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: false, appium:takesScreenshot: true, appium:udid: 90BAEFB6-D016-4D55-B9F4-83E..., appium:wdaLocalPort: 10001, appium:webStorageEnabled: false, appium:webkitDebugProxyPort: 11001, platformName: IOS}
Session ID: 12fa12ad-ff2d-407e-b426-1bc8ad2b872f
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:591)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:313)
at io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen(CanRecordScreen.java:48)
at com.qa.BaseTest.beforeMethod(BaseTest.java:109)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 40 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.LoginTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.042">
    <failure type="org.openqa.selenium.WebDriverException" message="An unknown server-side error occurred while processing the command. Original error: &amp;apos;ffmpeg&amp;apos; binary is not found in PATH. Install it using &amp;apos;brew install ffmpeg&amp;apos;. Check https://www.ffmpeg.org/download.html for more details.
Build info: version: &amp;apos;4.11.0&amp;apos;, revision: &amp;apos;040bc5406b&amp;apos;
System info: os.name: &amp;apos;Mac OS X&amp;apos;, os.arch: &amp;apos;x86_64&amp;apos;, os.version: &amp;apos;10.16&amp;apos;, java.version: &amp;apos;15.0.2&amp;apos;
Driver info: io.appium.java_client.ios.IOSDriver
Command: [12fa12ad-ff2d-407e-b426-1bc8ad2b872f, startRecordingScreen {}]
Capabilities {appium:app: /Users/annprodous/TDDFramew..., appium:automationName: XCUITest, appium:bundleId: com.saucelabs.SwagLabsMobil..., appium:databaseEnabled: false, appium:deviceName: iPhone 14 Pro Max, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: false, appium:takesScreenshot: true, appium:udid: 90BAEFB6-D016-4D55-B9F4-83E..., appium:wdaLocalPort: 10001, appium:webStorageEnabled: false, appium:webkitDebugProxyPort: 11001, platformName: IOS}
Session ID: 12fa12ad-ff2d-407e-b426-1bc8ad2b872f">
      <![CDATA[org.openqa.selenium.WebDriverException: An unknown server-side error occurred while processing the command. Original error: 'ffmpeg' binary is not found in PATH. Install it using 'brew install ffmpeg'. Check https://www.ffmpeg.org/download.html for more details.
Build info: version: '4.11.0', revision: '040bc5406b'
System info: os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.16', java.version: '15.0.2'
Driver info: io.appium.java_client.ios.IOSDriver
Command: [12fa12ad-ff2d-407e-b426-1bc8ad2b872f, startRecordingScreen {}]
Capabilities {appium:app: /Users/annprodous/TDDFramew..., appium:automationName: XCUITest, appium:bundleId: com.saucelabs.SwagLabsMobil..., appium:databaseEnabled: false, appium:deviceName: iPhone 14 Pro Max, appium:javascriptEnabled: true, appium:locationContextEnabled: false, appium:networkConnectionEnabled: false, appium:takesScreenshot: true, appium:udid: 90BAEFB6-D016-4D55-B9F4-83E..., appium:wdaLocalPort: 10001, appium:webStorageEnabled: false, appium:webkitDebugProxyPort: 11001, platformName: IOS}
Session ID: 12fa12ad-ff2d-407e-b426-1bc8ad2b872f
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:52)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:191)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:250)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:591)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:313)
at io.appium.java_client.screenrecording.CanRecordScreen.startRecordingScreen(CanRecordScreen.java:48)
at com.qa.BaseTest.beforeMethod(BaseTest.java:109)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
... Removed 40 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.BaseTest" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@BeforeMethod beforeMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @BeforeMethod beforeMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterMethod afterMethod" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="com.qa.tests.ProductTests" name="@AfterClass afterClass" time="0.0">
    <skipped/>
  </testcase> <!-- @AfterClass afterClass -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidPassword" time="0.0">
    <skipped/>
  </testcase> <!-- invalidPassword -->
  <testcase classname="com.qa.tests.LoginTests" name="invalidUserName" time="0.0">
    <skipped/>
  </testcase> <!-- invalidUserName -->
  <testcase classname="com.qa.tests.LoginTests" name="successfulLogin" time="0.0">
    <skipped/>
  </testcase> <!-- successfulLogin -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductDetailsPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductDetailsPage -->
  <testcase classname="com.qa.tests.ProductTests" name="validateProductOnProductsPage" time="0.0">
    <skipped/>
  </testcase> <!-- validateProductOnProductsPage -->
  <testcase classname="com.qa.BaseTest" name="@BeforeTest beforeTest" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeTest beforeTest -->
  <testcase classname="com.qa.BaseTest" name="@AfterTest afterTest" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterTest afterTest -->
  <testcase classname="com.qa.BaseTest" name="@AfterSuite afterSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite afterSuite -->
  <testcase classname="com.qa.BaseTest" name="@BeforeSuite beforeSuite" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite beforeSuite -->
</testsuite> <!-- Pixel_5 -->
